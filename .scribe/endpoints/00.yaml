name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/attemptLogin
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Attempt to login and send an OTP.

        This endpoint verifies the user's email and sends an OTP to the user's email for authentication.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The user''s email address.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The user''s password.'
        required: true
        example: Password123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: user@example.com
      password: Password123!
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "OTP sent successfully.",
              "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "message": "Invalid credentials.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "success": false,
              "message": "Validation error",
              "errors": {
                  "email": ["The email field is required."],
                  "password": ["The password field is required."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/loginViaOtp
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Login using OTP.

        This endpoint logs the user in using the OTP sent to their email.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The user''s email address.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      otp:
        name: otp
        description: 'The OTP sent to the user''s email.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: user@example.com
      otp: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Login successful.",
              "data": "Bearer token"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "message": "Invalid OTP or email.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "success": false,
              "message": "Validation error",
              "errors": {
                  "email": ["The email field is required."],
                  "otp": ["The otp field is required."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Register a new user.

        This endpoint registers a new user, creates associated records based on the user type, and optionally uploads a profile image.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The user''s email address.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'The user''s phone number.'
        required: true
        example: '+1234567890'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      city:
        name: city
        description: 'The city where the user resides.'
        required: true
        example: Lagos
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'The user''s address.'
        required: true
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      state:
        name: state
        description: 'The state where the user resides.'
        required: true
        example: Lagos
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      country:
        name: country
        description: 'The country where the user resides.'
        required: true
        example: Nigeria
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      usertype:
        name: usertype
        description: 'The type of user: merchant or sponsor.'
        required: true
        example: merchant
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The user''s password.'
        required: true
        example: Password123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmation of the user''s password.'
        required: true
        example: Password123!
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      image:
        name: image
        description: 'optional An optional profile image. The file must be an image (jpg, jpeg, png, gif) and under 2MB.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      store_name:
        name: store_name
        description: 'optional The store name (required if usertype is merchant).'
        required: false
        example: 'Super Store'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      store_description:
        name: store_description
        description: 'optional A description of the store (required if usertype is merchant).'
        required: false
        example: 'Best store in town'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sponsor_name:
        name: sponsor_name
        description: 'optional The sponsor''s name (required if usertype is sponsor).'
        required: false
        example: 'Big Sponsor Inc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sponsor_registration_number:
        name: sponsor_registration_number
        description: 'optional The sponsor''s registration number (required if usertype is sponsor).'
        required: false
        example: REG123456
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      sponsor_description:
        name: sponsor_description
        description: 'optional A description of the sponsor (required if usertype is sponsor).'
        required: false
        example: 'Leading sponsor in the industry'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      type:
        name: type
        description: 'optional The type of sponsor (required if usertype is sponsor).'
        required: false
        example: Gold
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: user@example.com
      phone: '+1234567890'
      city: Lagos
      address: '123 Main St'
      state: Lagos
      country: Nigeria
      usertype: merchant
      password: Password123!
      password_confirmation: Password123!
      store_name: 'Super Store'
      store_description: 'Best store in town'
      sponsor_name: 'Big Sponsor Inc'
      sponsor_registration_number: REG123456
      sponsor_description: 'Leading sponsor in the industry'
      type: Gold
    fileParameters:
      image: null
    responses:
      -
        status: 201
        content: |-
          {
              "success": true,
              "message": "User created successfully.",
              "data": {
                  "id": 1,
                  "email": "user@example.com",
                  "phone": "+1234567890",
                  "city": "Lagos",
                  "address": "123 Main St",
                  "state": "Lagos",
                  "country": "Nigeria",
                  "usertype": "merchant",
                  "image": "http://localhost/storage/images/image.jpg",
                  "created_at": "2024-01-01T00:00:00.000000Z",
                  "updated_at": "2024-01-01T00:00:00.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "success": false,
              "message": "Validation error",
              "errors": {
                  "email": ["The email has already been taken."],
                  "password": ["The password confirmation does not match."]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Logout the currently authenticated user.

        This endpoint logs out the currently authenticated user and revokes all their tokens.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Success! You are logged out.",
              "data": null
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "message": "Failed! You are already logged out.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
