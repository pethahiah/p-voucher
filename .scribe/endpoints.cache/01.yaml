## Autogenerated by Scribe. DO NOT MODIFY.

name: Vouchers
description: |-

  APIs for managing vouchers.
endpoints:
  -
    httpMethods:
      - POST
    uri: api/vouchers
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Create a new voucher.

        This endpoint allows sponsors to create a new voucher with specified parameters.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      merchant_id:
        name: merchant_id
        description: 'optional Array of merchant IDs.'
        required: false
        example:
          - 1
          - 2
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
      purpose:
        name: purpose
        description: 'optional Purpose of the voucher.'
        required: false
        example: '"Special Event"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      voucher_amount:
        name: voucher_amount
        description: 'Total amount of the voucher.'
        required: true
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
      amount_per_code:
        name: amount_per_code
        description: 'Amount per voucher code.'
        required: true
        example: 10.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
      expiry_date:
        name: expiry_date
        description: 'optional Expiry date of the voucher in YYYY-MM-DD format.'
        required: false
        example: '"2024-12-31"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'optional Limit on the number of uses.'
        required: false
        example: 500.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
      type:
        name: type
        description: 'optional Type of voucher (one_time or multiple_time).'
        required: false
        example: multiple_time
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      code_generation_method:
        name: code_generation_method
        description: 'optional Method for generating codes (sms or qr_code).'
        required: false
        example: qr_code
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      location:
        name: location
        description: 'optional Location where the voucher is valid.'
        required: false
        example: '"Oyo"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      merchant_id:
        - 1
        - 2
      purpose: '"Special Event"'
      voucher_amount: 100.0
      amount_per_code: 10.0
      expiry_date: '"2024-12-31"'
      limit: 500.0
      type: multiple_time
      code_generation_method: qr_code
      location: '"Oyo"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "success": true,
              "message": "Voucher created successfully.",
              "data": {
                  "purpose": "Special Event",
                  "voucher_amount": 100,
                  "amount_per_code": 10,
                  "expiry_date": "2024-12-31",
                  "limit": 500,
                  "type": "multiple_time",
                  "code_generation_method": "qr_code",
                  "location": "Oyo",
                  "sponsor_id": 1,
                  "voucher_code": "19AGVCBQOA",
                  "updated_at": "2024-08-02T17:25:18.000000Z",
                  "created_at": "2024-08-02T17:25:18.000000Z",
                  "id": 10,
                  "merchants": [
                      {
                          "id": 1,
                          "user_id": 2,
                          "store_name": "olaoluwa store",
                          "store_description": "we feed the nation",
                          "created_at": "2024-08-02T17:25:18.000000Z",
                          "updated_at": "2024-08-02T17:25:18.000000Z",
                          "voucher_code": "19AGVCBQOA"
                      },
                      {
                          "id": 2,
                          "user_id": 3,
                          "store_name": "olaoluwa store",
                          "store_description": "we feed the nation",
                          "created_at": "2024-08-02T17:25:18.000000Z",
                          "updated_at": "2024-08-02T17:25:18.000000Z",
                          "voucher_code": "19AGVCBQOA"
                      }
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "message": "Unauthorized: Only sponsors can create vouchers."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to create voucher.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/vouchers/redeem
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Redeem a voucher.

        This endpoint allows users to redeem a voucher by providing its code.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      voucher_code:
        name: voucher_code
        description: 'The code of the voucher to redeem.'
        required: true
        example: '"19AGVCBQOA"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      voucher_code: '"19AGVCBQOA"'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      voucher_code:
        name: voucher_code
        description: ''
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      voucher_code: saepe
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Voucher redeemed successfully.",
              "data": {
                  "response": null
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "success": false,
              "message": "Voucher has expired."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "success": false,
              "message": "Voucher has already been used."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "success": false,
              "message": "No more vouchers available."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
              "success": false,
              "message": "Voucher is not valid in your location."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "message": "Voucher not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to redeem voucher.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/update/{VoucherId}/voucher'
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Update an existing voucher.

        This endpoint allows updating the details of a voucher.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      VoucherId:
        name: VoucherId
        description: ''
        required: true
        example: minima
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      voucherId:
        name: voucherId
        description: 'The ID of the voucher to update.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      VoucherId: minima
      voucherId: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      merchant_id:
        name: merchant_id
        description: 'List of merchant IDs associated with the voucher.'
        required: true
        example:
          - 1
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        custom: []
      purpose:
        name: purpose
        description: 'Purpose of the voucher.'
        required: true
        example: '"Special Discount"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      voucher_amount:
        name: voucher_amount
        description: 'Total amount of the voucher.'
        required: true
        example: 50.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
      amount_per_code:
        name: amount_per_code
        description: 'Amount per voucher code.'
        required: true
        example: 5.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
      expiry_date:
        name: expiry_date
        description: 'Expiry date of the voucher in YYYY-MM-DD format.'
        required: true
        example: '"2024-12-31"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      limit:
        name: limit
        description: 'Limit on the number of uses.'
        required: true
        example: 100.0
        type: number
        enumValues: []
        exampleWasSpecified: true
        custom: []
      type:
        name: type
        description: 'Type of voucher (one_time or multiple_time).'
        required: true
        example: one_time
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      code_generation_method:
        name: code_generation_method
        description: 'Method for generating codes (qr_code or sms).'
        required: true
        example: qr_code
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      location:
        name: location
        description: 'Location where the voucher is valid.'
        required: true
        example: '"Lagos"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      merchant_id:
        - 1
      purpose: '"Special Discount"'
      voucher_amount: 50.0
      amount_per_code: 5.0
      expiry_date: '"2024-12-31"'
      limit: 100.0
      type: one_time
      code_generation_method: qr_code
      location: '"Lagos"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Voucher updated successfully.",
              "data": {
                  "response": {
                      "id": 10,
                      "voucher_code": "19AGVCBQOA",
                      "sponsor_id": 1,
                      "purpose": "Special Discount",
                      "expiry_date": "2024-12-31",
                      "limit": 100,
                      "voucher_amount": 50.00,
                      "amount_per_code": 5.00,
                      "location": "Lagos",
                      "type": "one_time",
                      "voucher_status": "unused",
                      "code_generation_method": "qr_code",
                      "deleted_at": null,
                      "created_at": "2024-08-02T17:25:18.000000Z",
                      "updated_at": "2024-08-02T17:29:05.000000Z",
                      "merchants": [
                          {
                              "id": 1,
                              "user_id": 2,
                              "store_name": "olaoluwa store",
                              "store_description": "we feed the nation",
                              "voucher_code": null,
                              "deleted_at": null,
                              "created_at": "2024-08-02T17:05:28.000000Z",
                              "updated_at": "2024-08-02T17:05:28.000000Z",
                              "pivot": {
                                  "voucher_id": 10,
                                  "merchant_id": 1,
                                  "voucher_code": "19AGVCBQOA",
                                  "created_at": "2024-08-02T17:25:18.000000Z",
                                  "updated_at": "2024-08-02T17:29:05.000000Z"
                              }
                          }
                      ]
                  }
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "message": "Unauthorized: Only sponsors can update vouchers."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "message": "Voucher not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to update voucher.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/revoke/{VoucherId}'
    metadata:
      groupName: Vouchers
      groupDescription: |-

        APIs for managing vouchers.
      subgroup: ''
      subgroupDescription: ''
      title: 'Soft delete a voucher.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      VoucherId:
        name: VoucherId
        description: ''
        required: true
        example: inventore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      VoucherId: inventore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Voucher revoked successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "message": "Unauthorized: Only admin sponsors can revoke vouchers."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "message": "Voucher not found.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to revoke voucher.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/delete-voucher/{VoucherId}'
    metadata:
      groupName: Vouchers
      groupDescription: |-

        APIs for managing vouchers.
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a voucher.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      VoucherId:
        name: VoucherId
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      VoucherId: tempore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Voucher deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "message": "Unauthorized: Only admin sponsors can delete vouchers."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
              "success": false,
              "message": "Voucher not found.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to delete voucher.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vouchers/by-sponsor
    metadata:
      groupName: Vouchers
      groupDescription: |-

        APIs for managing vouchers.
      subgroup: ''
      subgroupDescription: ''
      title: 'Fetch all vouchers created by a sponsor.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'optional Number of items per page.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Fetched vouchers successfully.",
              "data": {
                  "data": [
                      {
                          "id": 1,
                          "voucher_code": "ABC123",
                          "voucher_amount": 100.00,
                          "created_at": "2024-08-05T00:00:00Z",
                          "updated_at": "2024-08-05T00:00:00Z"
                      }
                  ],
                  "current_page": 1,
                  "last_page": 10,
                  "per_page": 15,
                  "total": 150
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to fetch vouchers.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vouchers/used
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get used vouchers.

        This endpoint retrieves all used vouchers with pagination support.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of vouchers per page. Default is 15.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Fetched used vouchers successfully.",
              "data": [
                  {
                      "id": 10,
                      "voucher_code": "19AGVCBQOA",
                      "purpose": "Special Event",
                      "expiry_date": "2024-12-31",
                      "amount_per_code": 10,
                      "voucher_amount": 100,
                      "location": "Oyo",
                      "type": "multiple_time",
                      "code_generation_method": "qr_code",
                      "used_at": "2024-08-02T17:25:18.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to fetch used vouchers.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vouchers/redeemed
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get redeemed vouchers.

        This endpoint retrieves all redeemed vouchers with pagination support.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of vouchers per page. Default is 15.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Fetched redeemed vouchers successfully.",
              "data": [
                  {
                      "id": 10,
                      "voucher_code": "19AGVCBQOA",
                      "purpose": "Special Event",
                      "expiry_date": "2024-12-31",
                      "amount_per_code": 10,
                      "voucher_amount": 100,
                      "location": "Oyo",
                      "type": "multiple_time",
                      "code_generation_method": "qr_code",
                      "redeemed_at": "2024-08-02T17:25:18.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to fetch redeemed vouchers.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/beneficiaries/redeemed
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get beneficiaries with redeemed vouchers.

        This endpoint retrieves beneficiaries who have redeemed vouchers with pagination support.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of beneficiaries per page. Default is 15.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Fetched beneficiaries with redeemed vouchers successfully.",
              "data": [
                  {
                      "id": 1,
                      "name": "John Doe",
                      "redeemed_vouchers_count": 5
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to fetch beneficiaries.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/vouchers/yet-to-be-redeemed
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get vouchers yet to be redeemed.

        This endpoint retrieves vouchers that have not yet been redeemed with pagination support.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      per_page:
        name: per_page
        description: 'The number of vouchers per page. Default is 15.'
        required: false
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      per_page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Fetched vouchers yet to be redeemed successfully.",
              "data": [
                  {
                      "id": 10,
                      "voucher_code": "19AGVCBQOA",
                      "purpose": "Special Event",
                      "expiry_date": "2024-12-31",
                      "amount_per_code": 10,
                      "voucher_amount": 100,
                      "location": "Oyo",
                      "type": "multiple_time",
                      "code_generation_method": "qr_code",
                      "created_at": "2024-08-02T17:25:18.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to fetch vouchers yet to be redeemed.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/voucher-search/date-range
    metadata:
      groupName: Vouchers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get vouchers by date range.

        This endpoint allows sponsors to fetch vouchers within a specified date range.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      start_date:
        name: start_date
        description: 'The start date of the date range. Format: YYYY-MM-DD.'
        required: true
        example: '"2024-01-01"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      end_date:
        name: end_date
        description: 'The end date of the date range. Format: YYYY-MM-DD.'
        required: true
        example: '"2024-12-31"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      start_date: '"2024-01-01"'
      end_date: '"2024-12-31"'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2024-08-05T07:51:40'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date.'
        required: true
        example: '2024-08-05T07:51:40'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      start_date: '2024-08-05T07:51:40'
      end_date: '2024-08-05T07:51:40'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "message": "Vouchers fetched successfully.",
              "data": [
                  {
                      "id": 10,
                      "voucher_code": "19AGVCBQOA",
                      "purpose": "Special Event",
                      "expiry_date": "2024-12-31",
                      "amount_per_code": 10,
                      "voucher_amount": 100,
                      "location": "Oyo",
                      "type": "multiple_time",
                      "code_generation_method": "qr_code",
                      "created_at": "2024-08-02T17:25:18.000000Z",
                      "updated_at": "2024-08-02T17:25:18.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
              "success": false,
              "message": "Unauthorized: Only sponsors can access their vouchers."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Failed to fetch vouchers.",
              "error": "Detailed error message"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
